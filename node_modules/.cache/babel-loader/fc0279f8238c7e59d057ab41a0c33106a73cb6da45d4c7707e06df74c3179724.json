{"ast":null,"code":"var _jsxFileName = \"/Users/user/schoolbook-fe/src/component/Register/InstructorLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport AuthContext from '../../context/AuthProvider';\nimport axios from \"../../api/axios\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport \"./RegisterTab.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tabs = [{\n  id: 0,\n  label: \"Register\"\n}, {\n  id: 1,\n  label: \"Login\"\n}];\nconst LOGIN_URL = 'api/v1/users/login';\nconst REGISTER_URL = '/api/v1/users';\nconst UNIVERSITY_URL = '/api/v1/universities';\nconst DEPARTMENT_URL = '/api/v1/departments';\nconst InstructorLogin = () => {\n  _s();\n  const emailRef = useRef();\n  const errRef = useRef();\n  const Navigate = useNavigate();\n  const {\n    setAuth\n  } = useContext(AuthContext);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [universities, setUniversities] = useState([]);\n  const [currentUniversities, setCurrentUniversities] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [currentDepartment, setCurrentDepartment] = useState([]);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState('');\n  const [activeTab, setActiveTab] = useState(0);\n  const [fullName, setFullName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [gender, setGender] = useState('');\n  const [country, setCountry] = useState('');\n  const [subscribe, setSubscribe] = useState(false);\n  const [errors, setErrors] = useState({});\n  const handleRegSubmit = async e => {\n    e.preventDefault();\n\n    // Validate form data\n    const validationErrors = {};\n    if (formData.fullName.trim() === \"\") {\n      errors.fullName = \"Full Name is required\";\n    }\n    if (formData.email.trim() === \"\") {\n      errors.email = \"Email is required\";\n    }\n    if (formData.phoneNumber.trim() === \"\") {\n      errors.phoneNumber = \"phoneNumber is required\";\n    }\n    if (formData.university.trim() === \"\") {\n      errors.university = \"University is required\";\n    }\n    if (formData.department.trim() === \"\") {\n      errors.department = \"Department is required\";\n    }\n    if (formData.password.trim() === \"\") {\n      errors.password = \"Password is required\";\n    }\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    const payload = {\n      fullName,\n      email,\n      phoneNumber,\n      gender,\n      university,\n      department,\n      password,\n      country,\n      subscribe\n    };\n    try {\n      const response = await axios.post(REGISTER_URL, payload);\n      console.log(response.data); // Handle success response\n    } catch (error) {\n      console.error(error); // Handle error response\n    }\n  };\n\n  //   const handleRegSubmit = (e) => {\n  //     e.preventDefault();\n  //     const validationErrors = validateForm();\n  //     if (Object.keys(validationErrors).length === 0) {\n  //       // Form is valid, send data to server\n  //       sendDataToServer();\n  //     } else {\n  //       // Form has errors, update state with errors\n  //       setErrors(validationErrors);\n  //     }\n  //   };\n\n  //   const validateForm = () => {\n  //     const errors = {};\n\n  //     // Validate each field and add errors if necessary\n  //     if (formData.fullName.trim() === \"\") {\n  //       errors.fullName = \"Full Name is required\";\n  //     }\n  //     if (formData.email.trim() === \"\") {\n  //         errors.email = \"Email is required\";\n  //       }\n  //       if (formData.phoneNumber.trim() === \"\") {\n  //         errors.phoneNumber = \"phoneNumber is required\";\n  //       }\n  //       if (formData.university.trim() === \"\") {\n  //         errors.university = \"University is required\";\n  //       }\n  //       if (formData.department.trim() === \"\") {\n  //         errors.department = \"Department is required\";\n  //       }\n  //       if (formData.password.trim() === \"\") {\n  //         errors.password = \"Password is required\";\n  //       }\n\n  //     return errors;\n  //   };\n\n  //   const sendDataToServer = () => {\n  //     // Make an HTTP request to your server endpoint using Axios\n  //     axios.post(REGISTER_URL, formData)\n  //       .then((response) => {\n  //         // Handle successful registration\n  //         console.log(response.data);\n  //       })\n  //       .catch((error) => {\n  //         // Handle registration error\n  //         console.error(error);\n  //       });\n  //   };\n\n  //Login \n  useEffect(() => {\n    var _emailRef$current;\n    (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.focus();\n  }, []);\n  useEffect(() => {\n    setErrMsg('');\n  }, [email, password]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      var _response$data;\n      const response = await axios.post(LOGIN_URL, JSON.stringify({\n        email,\n        password\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: false\n      });\n      // Display accesstoken in the console\n      // console.log(JSON.stringify(response?.data));\n      // console.log(JSON.stringify(response));\n      const accessToken = response === null || response === void 0 ? void 0 : response.data.accessToken;\n      const userType = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.userType;\n      setAuth({\n        email,\n        password,\n        userType,\n        accessToken\n      });\n      setEmail('');\n      setPassword('');\n      setSuccess(true);\n      Navigate(\"InstructorDashboard\");\n    } catch (err) {\n      var _err$response, _err$response2;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No server response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        setErrMsg(\"Invalid Username or Password\");\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        setErrMsg(\"Unauthorized\");\n      } else {\n        setErrMsg(\"Login Failed\");\n      }\n      errRef.current.focus();\n    }\n  };\n\n  // Getting the universities from the enndpoint\n  useEffect(() => {\n    axios.get(UNIVERSITY_URL).then(response => {\n      const universitiesData = response.data.data.resource;\n      setUniversities(universitiesData);\n    }).catch(error => {\n      console.error('Error fetching API:', error);\n    });\n  }, []);\n\n  // Getting the Department from the enndpoint\n  useEffect(() => {\n    axios.get(DEPARTMENT_URL).then(response => {\n      const departmentData = response.data.data.resource;\n      setDepartments(departmentData);\n    }).catch(error => {\n      console.error('Error fetching API:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerTab\",\n        children: tabs.map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === tab.id ? \"active\" : \"\",\n          onClick: () => setActiveTab(tab.id),\n          children: tab.label\n        }, tab.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), activeTab === 0 && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Fullname\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), errors.fullName && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Phone number\",\n          name: \"PhoneNumber\",\n          value: phoneNumber,\n          onChange: e => setPhoneNumber(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 18\n        }, this), errors.phoneNumber && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"gender\",\n          value: gender,\n          onChange: e => setGender(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"drop\",\n            value: \"\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"male\",\n            children: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"female\",\n            children: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"university\",\n          onChange: e => setCurrentUniversities(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: currentUniversities,\n            children: \"Universities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), universities.map(university => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: university._id,\n            children: university.name\n          }, university._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 22\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"department\",\n          onChange: e => setCurrentDepartment(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: currentDepartment,\n            children: \"Departments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 19\n          }, this), departments.map(department => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: department._id,\n            children: department.name\n          }, department._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 22\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setFullName(e.target.value),\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Country\",\n          name: \"country\",\n          value: country,\n          onChange: e => setFullName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"subscribe\",\n            checked: subscribe,\n            onChange: e => setFullName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"By Registering you agree with the terms and\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 69\n            }, this), \" condition of schoolbook\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formButton\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }, this), activeTab === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: success ? {\n          handleSubmit\n        } : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            ref: errRef,\n            className: errMsg ? \"errmsg\" : \"offscreen\",\n            \"aria-live\": \"assertive\",\n            children: errMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              id: \"email\",\n              ref: emailRef,\n              onChange: e => setEmail(e.target.value),\n              value: email,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              id: \"password\",\n              onChange: e => setPassword(e.target.value),\n              value: password,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loginButton\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/PassRecover\",\n                children: \"Forgot\\xA0password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 10\n  }, this);\n};\n_s(InstructorLogin, \"yjOWN2aCTKMdC49yviGQ2GZHgpA=\", false, function () {\n  return [useNavigate];\n});\n_c = InstructorLogin;\nexport default InstructorLogin;\nvar _c;\n$RefreshReg$(_c, \"InstructorLogin\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","AuthContext","axios","Link","Navigate","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","tabs","id","label","LOGIN_URL","REGISTER_URL","UNIVERSITY_URL","DEPARTMENT_URL","InstructorLogin","_s","emailRef","errRef","setAuth","email","setEmail","password","setPassword","universities","setUniversities","currentUniversities","setCurrentUniversities","departments","setDepartments","currentDepartment","setCurrentDepartment","errMsg","setErrMsg","success","setSuccess","activeTab","setActiveTab","fullName","setFullName","phoneNumber","setPhoneNumber","gender","setGender","country","setCountry","subscribe","setSubscribe","errors","setErrors","handleRegSubmit","e","preventDefault","validationErrors","formData","trim","university","department","Object","keys","length","payload","response","post","console","log","data","error","_emailRef$current","current","focus","handleSubmit","_response$data","JSON","stringify","headers","withCredentials","accessToken","userType","err","_err$response","_err$response2","status","get","then","universitiesData","resource","catch","departmentData","className","children","map","tab","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","name","_id","autoComplete","checked","ref","to","_c","$RefreshReg$"],"sources":["/Users/user/schoolbook-fe/src/component/Register/InstructorLogin.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport AuthContext from '../../context/AuthProvider';\nimport axios from \"../../api/axios\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport \"./RegisterTab.css\";\n\nconst tabs = [\n  { id: 0, label: \"Register\" },\n  { id: 1, label: \"Login\" },\n];\n\nconst LOGIN_URL = 'api/v1/users/login'\nconst REGISTER_URL = '/api/v1/users'\nconst UNIVERSITY_URL = '/api/v1/universities'\nconst DEPARTMENT_URL = '/api/v1/departments'\n\nconst InstructorLogin = () => {\n  const emailRef = useRef();\n  const errRef = useRef();\n  const Navigate = useNavigate();\n  const { setAuth } = useContext(AuthContext);\n\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [universities, setUniversities] = useState([]);\n  const [currentUniversities, setCurrentUniversities] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [currentDepartment, setCurrentDepartment] = useState([]);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState('');\n  const [activeTab, setActiveTab] = useState(0);\n  const [fullName, setFullName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [gender, setGender] = useState('');\n  const [country, setCountry] = useState('');\n  const [subscribe, setSubscribe] = useState(false);\n  const [errors, setErrors] = useState({});\n  \n  const handleRegSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validate form data\n    const validationErrors = {};\n    if (formData.fullName.trim() === \"\") {\n        errors.fullName = \"Full Name is required\";\n      }\n      if (formData.email.trim() === \"\") {\n          errors.email = \"Email is required\";\n        }\n        if (formData.phoneNumber.trim() === \"\") {\n          errors.phoneNumber = \"phoneNumber is required\";\n        }\n        if (formData.university.trim() === \"\") {\n          errors.university = \"University is required\";\n        }\n        if (formData.department.trim() === \"\") {\n          errors.department = \"Department is required\";\n        }\n        if (formData.password.trim() === \"\") {\n          errors.password = \"Password is required\";\n        }\n  \n\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    const payload = {\n        fullName,\n        email,\n        phoneNumber,\n        gender,\n        university,\n        department,\n        password,\n        country,\n        subscribe\n      };\n      try {\n        const response = await axios.post(REGISTER_URL, payload);\n        console.log(response.data); // Handle success response\n      } catch (error) {\n        console.error(error); // Handle error response\n      }\n    };\n\n//   const handleRegSubmit = (e) => {\n//     e.preventDefault();\n//     const validationErrors = validateForm();\n//     if (Object.keys(validationErrors).length === 0) {\n//       // Form is valid, send data to server\n//       sendDataToServer();\n//     } else {\n//       // Form has errors, update state with errors\n//       setErrors(validationErrors);\n//     }\n//   };\n\n//   const validateForm = () => {\n//     const errors = {};\n\n//     // Validate each field and add errors if necessary\n//     if (formData.fullName.trim() === \"\") {\n//       errors.fullName = \"Full Name is required\";\n//     }\n//     if (formData.email.trim() === \"\") {\n//         errors.email = \"Email is required\";\n//       }\n//       if (formData.phoneNumber.trim() === \"\") {\n//         errors.phoneNumber = \"phoneNumber is required\";\n//       }\n//       if (formData.university.trim() === \"\") {\n//         errors.university = \"University is required\";\n//       }\n//       if (formData.department.trim() === \"\") {\n//         errors.department = \"Department is required\";\n//       }\n//       if (formData.password.trim() === \"\") {\n//         errors.password = \"Password is required\";\n//       }\n\n//     return errors;\n//   };\n\n//   const sendDataToServer = () => {\n//     // Make an HTTP request to your server endpoint using Axios\n//     axios.post(REGISTER_URL, formData)\n//       .then((response) => {\n//         // Handle successful registration\n//         console.log(response.data);\n//       })\n//       .catch((error) => {\n//         // Handle registration error\n//         console.error(error);\n//       });\n//   };\n\n\n  //Login \n  useEffect(() => {\n    emailRef.current?.focus();\n  }, []);\n\n  useEffect(() => {\n    setErrMsg('');\n  }, [email, password])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n   \n    try{\n      const response = await axios.post(LOGIN_URL, \n        JSON.stringify({email, password}),\n        {\n          headers: { 'Content-Type': 'application/json'},\n          withCredentials: false,\n        }\n      );\n      // Display accesstoken in the console\n      // console.log(JSON.stringify(response?.data));\n      // console.log(JSON.stringify(response));\n      const accessToken = response?.data.accessToken;\n      const userType = response?.data?.userType;\n      setAuth({email, password, userType, accessToken});\n      setEmail('');\n      setPassword('');\n      setSuccess(true);\n      Navigate(\"InstructorDashboard\");\n\n    }catch (err){\n        if(!err?.response){\n          setErrMsg('No server response')\n        } else if(err.response?.status === 400){\n          setErrMsg(\"Invalid Username or Password\");\n        } else if (err.response?.status === 401){\n          setErrMsg(\"Unauthorized\");\n          }else{\n            setErrMsg(\"Login Failed\");\n          }\n          errRef.current.focus();\n        }\n      }\n\n      // Getting the universities from the enndpoint\n      useEffect(() => {\n        axios.get(UNIVERSITY_URL)\n          .then(response => {\n            const universitiesData = response.data.data.resource;\n            setUniversities(universitiesData); \n          })\n          .catch(error => {\n            console.error('Error fetching API:', error);\n          });\n      }, []);\n\n\n      // Getting the Department from the enndpoint\n      useEffect(() => {\n        axios.get(DEPARTMENT_URL)\n          .then(response => {\n            const departmentData = response.data.data.resource;\n            setDepartments(departmentData); \n          })\n          .catch(error => {\n            console.error('Error fetching API:', error);\n          });\n      }, []);\n\n  return (\n         <div className=\"register\">     \n        <div className=\"tabForm\">\n        <div className=\"registerTab\">\n          {tabs.map((tab) => (\n            <button\n              key={tab.id}\n              className={activeTab === tab.id ? \"active\" : \"\"}\n              onClick={() => setActiveTab(tab.id)}\n            >\n              {tab.label}\n            </button>\n          ))}\n        </div>\n          {activeTab === 0 && \n              <form onSubmit={handleRegSubmit}>\n                <input \n                type=\"text\" \n                placeholder=\"Fullname\"\n                value={fullName}\n                onChange={(e) => setFullName(e.target.value)}\n                required\n                />\n                {errors.fullName && <span>{errors.fullName}</span>}\n                <input \n                 type=\"email\" \n                 placeholder=\"Email\"\n                 name=\"email\"\n                 value={email}\n                 onChange={(e) => setEmail(e.target.value)}\n                 required\n                 />\n                 {errors.email && <span>{errors.email}</span>}\n                 <input \n                 type=\"text\" \n                 placeholder=\"Phone number\"\n                 name=\"PhoneNumber\"\n                 value={phoneNumber}\n                 onChange={(e) => setPhoneNumber(e.target.value)}\n                 required\n                 />\n                 {errors.phoneNumber && <span>{errors.phoneNumber}</span>}\n\n                <select name=\"gender\" value={gender}   onChange={(e) => setGender(e.target.value)}>\n                  <option className=\"drop\" value=\"\">Gender</option>\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                </select>\n                <select name=\"university\"  onChange={(e) => setCurrentUniversities(e.target.value)}>\n                <option value={currentUniversities}>Universities</option>\n                  {universities.map(university => (\n                     <option key={university._id} value={university._id}>{university.name}</option>\n                  ))}\n                </select>  \n                <select name=\"department\"  onChange={(e) => setCurrentDepartment(e.target.value)}>\n                  <option value={currentDepartment}>Departments</option>\n                  {departments.map(department => (\n                     <option key={department._id} value={department._id}>{department.name}</option>\n                  ))}\n                </select>  \n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={(e) => setFullName(e.target.value)}\n                  autoComplete=\"off\"\n                  />\n                <input\n                  type=\"text\"\n                  placeholder=\"Country\"\n                  name=\"country\"\n                  value={country}\n                  onChange={(e) => setFullName(e.target.value)}\n                  />\n                <div className=\"check\">\n                  <input \n                    type=\"checkbox\" \n                    name=\"subscribe\"\n                    checked={subscribe}\n                    onChange={(e) => setFullName(e.target.value)}\n                    />\n                  <label>By Registering you agree with the terms and<br/> condition of schoolbook</label> \n                </div> \n                <div className=\"formButton\">\n                {/* <Link to=\"/InstructorDashboard\"> */}\n                  <input type=\"submit\" value=\"Register\"></input> \n                  {/* </Link> */}\n                </div>                   \n              </form>\n          }\n          {activeTab === 1 && \n          <>\n          {success ? (\n             {handleSubmit}\n          ):(\n          <>\n           <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n          <form onSubmit={handleSubmit}>\n            <input \n              type=\"email\" \n              placeholder=\"Email\"\n              id=\"email\"\n              ref={emailRef}\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              required \n            />\n            <input \n              type=\"password\" \n              placeholder=\"Password\"\n              id=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              required  \n              />\n            <div className=\"loginButton\">\n                <input type=\"submit\" value=\"Login\" />\n              <Link to=\"/PassRecover\">Forgot&nbsp;password?</Link>\n            </div>   \n          </form>\n          </>\n          )}\n          </>}\n        </div>\n      </div>\n  )\n}\n\nexport default InstructorLogin\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}