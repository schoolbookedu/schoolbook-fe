{"ast":null,"code":"var _jsxFileName = \"/Users/user/schoolbook-fe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst express = require('express');\nconst app = express();\nconst path = require('path');\nconst cors = require('cors');\nconst multer = require('multer');\nconst port = process.env.PORT || 8080;\nconst connection = require('./config/database');\napp.use(cors());\nconst storage = multer.diskStorage({\n  destination: path.join(__dirname, '../public_html/', 'uploads'),\n  filename: function (req, file, cb) {\n    // null as first argument means no error\n    cb(null, Date.now() + '-' + file.originalname);\n  }\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\napp.post('/imageupload', async (req, res) => {\n  try {\n    // 'avatar' is the name of our file input field in the HTML form\n\n    let upload = multer({\n      storage: storage\n    }).single('avatar');\n    upload(req, res, function (err) {\n      // req.file contains information of uploaded file\n      // req.body contains information of text fields\n\n      if (!req.file) {\n        return res.send('Please select an image to upload');\n      } else if (err instanceof multer.MulterError) {\n        return res.send(err);\n      } else if (err) {\n        return res.send(err);\n      }\n      const classifiedsadd = {\n        image: req.file.filename\n      };\n      const sql = \"INSERT INTO users SET ?\";\n      connection.query(sql, classifiedsadd, (err, results) => {\n        if (err) throw err;\n        res.json({\n          success: 1\n        });\n      });\n    });\n  } catch (err) {\n    console.log(err);\n  }\n});\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 3\n}, this));\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`));","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","express","require","app","path","cors","multer","port","process","env","PORT","connection","use","storage","diskStorage","destination","join","__dirname","filename","req","file","cb","Date","now","originalname","root","createRoot","document","getElementById","post","res","upload","single","err","send","MulterError","classifiedsadd","image","sql","query","results","json","success","console","log","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","listen"],"sources":["/Users/user/schoolbook-fe/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nconst express = require('express')\nconst app = express();\nconst path = require('path');\nconst cors = require('cors');\nconst multer = require('multer');\nconst port = process.env.PORT || 8080;\n\nconst connection = require('./config/database');\n\napp.use(cors());\n\nconst storage = multer.diskStorage({\n  destination: path.join(__dirname, '../public_html/', 'uploads'),\n  filename: function (req, file, cb) {   \n      // null as first argument means no error\n      cb(null, Date.now() + '-' + file.originalname )  \n  }\n})\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\napp.post('/imageupload', async (req, res) => {\t\n  try {\n      // 'avatar' is the name of our file input field in the HTML form\n\n      let upload = multer({ storage: storage}).single('avatar');\n\n      upload(req, res, function(err) {\n          // req.file contains information of uploaded file\n          // req.body contains information of text fields\n\n          if (!req.file) {\n              return res.send('Please select an image to upload');\n          }\n          else if (err instanceof multer.MulterError) {\n              return res.send(err);\n          }\n          else if (err) {\n              return res.send(err);\n          }\n\n          const classifiedsadd = {\n      image: req.file.filename\n    };\n    const sql = \"INSERT INTO users SET ?\";\n            connection.query(sql, classifiedsadd, (err, results) => {  if (err) throw err;\n\t\t\t\tres.json({ success: 1 })      \n\n\t\t\t});  \n\n        }); \n\n    }catch (err) {console.log(err)}\n})\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}