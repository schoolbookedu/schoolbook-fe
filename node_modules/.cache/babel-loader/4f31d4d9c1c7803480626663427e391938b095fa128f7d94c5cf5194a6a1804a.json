{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nexport default configureStore({\n  reducer: {\n    inputValue: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      switch (action.type) {\n        case 'UPDATE_INPUT_VALUE':\n          return action.payload;\n        default:\n          return state;\n      }\n    },\n    inputTitle: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      switch (action.type) {\n        case 'UPDATE_TITLE_VALUE':\n          return action.payload;\n        default:\n          return state;\n      }\n    },\n    inputObjective: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      switch (action.type) {\n        case 'UPDATE_OBJECTIVE_VALUE':\n          return action.payload;\n        default:\n          return state;\n      }\n    },\n    inputModule: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      switch (action.type) {\n        case 'UPDATE_MODULE_VALUE':\n          return action.payload;\n        default:\n          return state;\n      }\n    }\n  }\n});\nconst inputSlice = createSlice({\n  name: 'inputs',\n  initialState: [],\n  reducers: {\n    addInput: (state, action) => {\n      state.push(action.payload);\n    },\n    removeInput: (state, action) => {\n      return state.filter(input => input.id !== action.payload);\n    }\n  }\n});\nconst store = configureStore({\n  reducer: inputSlice.reducer\n});\n\n// Step 2: Define the initial state and reducers\nconst {\n  addInput,\n  removeInput\n} = inputSlice.actions;","map":{"version":3,"names":["configureStore","reducer","inputValue","state","arguments","length","undefined","action","type","payload","inputTitle","inputObjective","inputModule","inputSlice","createSlice","name","initialState","reducers","addInput","push","removeInput","filter","input","id","store","actions"],"sources":["/Users/user/schoolbook-fe/src/store/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\n\nexport default configureStore({\n  reducer: {\n    inputValue: (state = '', action) => {\n      switch (action.type) {\n        case 'UPDATE_INPUT_VALUE':\n          return action.payload;\n        default:\n          return state;\n      }\n    },\n    inputTitle: (state = '', action) => {\n      switch (action.type) {\n        case 'UPDATE_TITLE_VALUE':\n          return action.payload;\n        default:\n          return state;\n      }\n    },\n    inputObjective: (state = '', action) => {\n      switch (action.type) {\n        case 'UPDATE_OBJECTIVE_VALUE':\n          return action.payload;\n        default:\n          return state;\n      }\n    },\n    inputModule: (state = '', action) => {\n      switch (action.type) {\n        case 'UPDATE_MODULE_VALUE':\n          return action.payload;\n        default:\n          return state;\n      }\n    },\n  },\n})\n\nconst inputSlice = createSlice({\n  name: 'inputs',\n  initialState: [],\n  reducers: {\n    addInput: (state, action) => {\n      state.push(action.payload);\n    },\n    removeInput: (state, action) => {\n      return state.filter(input => input.id !== action.payload);\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: inputSlice.reducer,\n});\n\n// Step 2: Define the initial state and reducers\nconst { addInput, removeInput } = inputSlice.actions;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,eAAeA,cAAc,CAAC;EAC5BC,OAAO,EAAE;IACPC,UAAU,EAAE,SAAAA,CAAA,EAAwB;MAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;MAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;MAC7B,QAAQC,MAAM,CAACC,IAAI;QACjB,KAAK,oBAAoB;UACvB,OAAOD,MAAM,CAACE,OAAO;QACvB;UACE,OAAON,KAAK;MAAC;IAEnB,CAAC;IACDO,UAAU,EAAE,SAAAA,CAAA,EAAwB;MAAA,IAAvBP,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;MAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;MAC7B,QAAQC,MAAM,CAACC,IAAI;QACjB,KAAK,oBAAoB;UACvB,OAAOD,MAAM,CAACE,OAAO;QACvB;UACE,OAAON,KAAK;MAAC;IAEnB,CAAC;IACDQ,cAAc,EAAE,SAAAA,CAAA,EAAwB;MAAA,IAAvBR,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;MAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;MACjC,QAAQC,MAAM,CAACC,IAAI;QACjB,KAAK,wBAAwB;UAC3B,OAAOD,MAAM,CAACE,OAAO;QACvB;UACE,OAAON,KAAK;MAAC;IAEnB,CAAC;IACDS,WAAW,EAAE,SAAAA,CAAA,EAAwB;MAAA,IAAvBT,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;MAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;MAC9B,QAAQC,MAAM,CAACC,IAAI;QACjB,KAAK,qBAAqB;UACxB,OAAOD,MAAM,CAACE,OAAO;QACvB;UACE,OAAON,KAAK;MAAC;IAEnB;EACF;AACF,CAAC,CAAC;AAEF,MAAMU,UAAU,GAAGC,WAAW,CAAC;EAC7BC,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACf,KAAK,EAAEI,MAAM,KAAK;MAC3BJ,KAAK,CAACgB,IAAI,CAACZ,MAAM,CAACE,OAAO,CAAC;IAC5B,CAAC;IACDW,WAAW,EAAEA,CAACjB,KAAK,EAAEI,MAAM,KAAK;MAC9B,OAAOJ,KAAK,CAACkB,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKhB,MAAM,CAACE,OAAO,CAAC;IAC3D;EACF;AACF,CAAC,CAAC;AAEF,MAAMe,KAAK,GAAGxB,cAAc,CAAC;EAC3BC,OAAO,EAAEY,UAAU,CAACZ;AACtB,CAAC,CAAC;;AAEF;AACA,MAAM;EAAEiB,QAAQ;EAAEE;AAAY,CAAC,GAAGP,UAAU,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}